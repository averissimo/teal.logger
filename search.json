[{"path":"https://github.com/insightsengineering/teal.logger/articles/teal-logger.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Getting started","text":"teal.logger package uses logger framework log events package. logger R package supporting logging namespaces, hierarchical logging, variety log destinations, vectorization, etc. information logger can found : GitHub CRAN","code":""},{"path":"https://github.com/insightsengineering/teal.logger/articles/teal-logger.html","id":"teal-loggers-default-logging-setup","dir":"Articles","previous_headings":"","what":"teal.logger’s default logging setup","title":"Getting started","text":"teal.logger uses function (register_logger) instantiate new logger namespace user’s choosing. teal.logger comes pair default layout logging level. packages teal framework use teal.logger log important events, e.g. setup teal data, changes filter panel, records merging data slices inside modules, etc. teal.logger’s defaults: logging level: logger.INFO logging layout: [{level}] {format(time, \\\"%Y-%m-%d %H:%M:%OS4\\\")} pid:{pid} token:[{token}] {ans} {msg} logs emitted stdout Look logger documentation information different logging levels mean interpret layout.","code":""},{"path":"https://github.com/insightsengineering/teal.logger/articles/teal-logger.html","id":"customizing-the-log-level","dir":"Articles","previous_headings":"","what":"Customizing the log level","title":"Getting started","text":"using register_logger logging level new logger defaults logger::INFO. can customize behavior 4 different ways: Using logger interface. Customizing teal’s logging level: Using function argument register_logger. Customizing teal’s logging level: Setting environment variable. Customizing teal’s logging level: Setting option. Customizing teal’s logging level: Please, note packages teal framework register loggers loading library, means want change default logging level via option system environment variable, change variable first, load library. Example : Alternatively, can change options loading package call teal.logger::register_logger appropriate namespace name change default single package. E.g. change defaults teal.logger. Replace teal.logger name package want change. information, look logger documentation documentation teal.logger::register_logger.","code":"library(teal.logger) register_logger(\"my_namespace\") logger::log_threshold(logger::TRACE, namespace = \"my_namespace\") library(teal.logger) logger::log_threshold(logger::TRACE, namespace = \"teal\") library(teal.logger) register_logger(\"my_namespace\", level = logger::TRACE) library(teal.logger) register_logger(namespace = \"teal\", level = logger::TRACE) library(teal.logger) Sys.setenv(TEAL.LOG_LEVEL = \"TRACE\") register_logger(\"my_namespace\") Sys.setenv(TEAL.LOG_LEVEL = \"TRACE\") library(teal.logger) library(teal.logger) options(teal.log_level = logger::TRACE) register_logger(\"my_namespace\") options(teal.log_level = logger::TRACE) library(teal.logger) # library(teal) # Sys.setenv(TEAL.LOG_LEVEL = \"TRACE\") # won't change the default # Sys.setenv(TEAL.LOG_LEVEL = \"TRACE\") # library(teal) # will change the default because teal is attached after changing the variable library(teal.logger) Sys.setenv(TEAL.LOG_LEVEL = \"TRACE\") register_logger('teal.logger')"},{"path":"https://github.com/insightsengineering/teal.logger/articles/teal-logger.html","id":"customizing-the-log-layout","dir":"Articles","previous_headings":"","what":"Customizing the log layout","title":"Getting started","text":"using register_logger log layout new logger defaults [{level}] {format(time, \\\"%Y-%m-%d %H:%M:%OS4\\\")} pid:{pid} token:[{token}] {ans} {msg}. can customize behavior 4 different ways: Using logger interface. Customizing teal’s logging layout: Using function argument register_logger. Customizing teal’s logging layout: Setting environment variable. Customizing teal’s logging layout: Setting option. Customizing teal’s logging layout: Please, note teal registers logger loading library, means want change default logging layout via option system environment variable, change variable first, load library. Example : Alternatively, can change options loading package call teal.logger::register_logger appropriate namespace name change default single package. E.g. change defaults teal.logger. Replace teal.logger name package want change. information, look logger documentation documentation teal.logger::register_logger.","code":"library(teal.logger) register_logger(\"my_namespace\") logger::log_layout(\"{level} {msg}\", namespace = \"my_namespace\") library(teal.logger) logger::log_layout(\"{level} {msg}\", namespace = \"teal\") library(teal.logger) register_logger(\"my_namespace\", layout = \"{level} {msg}\") library(teal.logger) register_logger(namespace = \"teal\", layout = \"{level} {msg}\") library(teal.logger) Sys.setenv(TEAL.LOG_LAYOUT = \"{level} {msg}\") register_logger(\"my_namespace\") Sys.setenv(TEAL.LOG_LAYOUT = \"{level} {msg}\") library(teal.logger) library(teal.logger) options(teal.log_layout = \"{level} {msg}\") register_logger(\"my_namespace\") options(teal.log_layout = \"{level} {msg}\") library(teal.logger) library(teal.logger) Sys.setenv(TEAL.LOG_LAYOUT = \"{level} {msg}\") # won't change the default Sys.setenv(TEAL.LOG_LAYOUT = \"{level} {msg}\") library(teal.logger) # will change the default because teal is attached after changing the variable library(teal.logger) Sys.setenv(TEAL.LOG_LAYOUT = \"{level} {msg}\") register_logger('teal.logger')"},{"path":"https://github.com/insightsengineering/teal.logger/articles/teal-logger.html","id":"customizing-the-log-destination","dir":"Articles","previous_headings":"","what":"Customizing the log destination","title":"Getting started","text":"teal.logger, default emits logs stdout. want change behavior, use logger’s API. Example redirecting teal’s logs stderr using logger’s API:","code":"library(teal.logger) logger::log_appender(logger::appender_stderr, namespace = \"teal\")"},{"path":"https://github.com/insightsengineering/teal.logger/articles/teal-logger.html","id":"logging-in-other-teal-x-packages","dir":"Articles","previous_headings":"","what":"Logging in other teal.X packages","title":"Getting started","text":"teal.X packages, like teal.data, use teal.logger::register_logger register loggers namespace. package registers logger namespace equal package name. E.g. teal.data registers logger teal.data namespace. package instantiates logger package loading using default logging settings subject modifications described sections .","code":""},{"path":"https://github.com/insightsengineering/teal.logger/articles/teal-logger.html","id":"example-of-usage","dir":"Articles","previous_headings":"","what":"Example of usage","title":"Getting started","text":"minimal working example logging using teal’s logging setup. default TEAL.LOG.LEVEL = \"INFO\" means logs level level = 400 won’t passed stdout.","code":"library(teal.logger) register_logger(namespace = \"my_module\")  logger::log_error(\"This is an ERROR level log from my module\", namespace = \"my_module\") # 200 logger::log_warn(\"This is a WARN level log from my module\", namespace = \"my_module\") # 300 logger::log_success(\"This is a SUCCESS level log from my module\", namespace = \"my_module\") # 350 logger::log_info(\"This is an INFO level log from my module\", namespace = \"my_module\") # 400 logger::log_info(\"This is a DEBUG level log from my module\", namespace = \"my_module\") # 500 logger::log_trace(\"This is a TRACE level log from my module\", namespace = \"my_module\") # 600"},{"path":"https://github.com/insightsengineering/teal.logger/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"NEST. Author, maintainer. Nikolas Burkoff. Author. Mahmoud Hallal. Author. Dawid Kaledkowski. Author. Maciej Nasinski. Author. Konrad Pagacz. Author. Pawel Rucki. Author. Junlue Zhao. Author. Tadeusz Lewandowski. Contributor. Roche. Copyright holder, funder.","code":""},{"path":"https://github.com/insightsengineering/teal.logger/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"NEST, Burkoff N, Hallal M, Kaledkowski D, Nasinski M, Pagacz K, Rucki P, Zhao J (2022). teal.logger: Logging Setup 'teal' Family Packages. R package version 0.1.0.9001.","code":"@Manual{,   title = {teal.logger: Logging Setup For The `teal` Family Of Packages},   author = {{NEST} and Nikolas Burkoff and Mahmoud Hallal and Dawid Kaledkowski and Maciej Nasinski and Konrad Pagacz and Pawel Rucki and Junlue Zhao},   year = {2022},   note = {R package version 0.1.0.9001}, }"},{"path":"https://github.com/insightsengineering/teal.logger/index.html","id":"teallogger","dir":"","previous_headings":"","what":"Logging Setup For The `teal` Family Of Packages","title":"Logging Setup For The `teal` Family Of Packages","text":"teal.logger R package providing unified setup generating logs using logger package.","code":""},{"path":"https://github.com/insightsengineering/teal.logger/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Logging Setup For The `teal` Family Of Packages","text":"repository requires personal access token install see creating using PAT. set , install latest released version package run: See package vignettes browseVignettes(package = \"teal.logger\") usage package.","code":"Sys.setenv(GITHUB_PAT = \"your_access_token_here\") if (!require(\"devtools\")) install.packages(\"devtools\") devtools::install_github(\"insightsengineering/teal.logger@*release\")"},{"path":"https://github.com/insightsengineering/teal.logger/pull_request_template.html","id":null,"dir":"","previous_headings":"","what":"Pull Request","title":"Pull Request","text":"Fixes #nnn","code":""},{"path":"https://github.com/insightsengineering/teal.logger/reference/layout_teal_glue_generator.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate log layout function using common variables available via glue syntax including shiny session token — layout_teal_glue_generator","title":"Generate log layout function using common variables available via glue syntax including shiny session token — layout_teal_glue_generator","text":"Generate log layout function using common variables available via glue syntax including shiny session token","code":""},{"path":"https://github.com/insightsengineering/teal.logger/reference/layout_teal_glue_generator.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate log layout function using common variables available via glue syntax including shiny session token — layout_teal_glue_generator","text":"","code":"layout_teal_glue_generator(layout)"},{"path":"https://github.com/insightsengineering/teal.logger/reference/layout_teal_glue_generator.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate log layout function using common variables available via glue syntax including shiny session token — layout_teal_glue_generator","text":"layout (character(1)) log layout. Alongside standard logging variables provided logging package (e.g. pid) token variable can used write last 8 characters shiny session token log.","code":""},{"path":"https://github.com/insightsengineering/teal.logger/reference/layout_teal_glue_generator.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate log layout function using common variables available via glue syntax including shiny session token — layout_teal_glue_generator","text":"function taking level msg arguments - keeping original call creating generator generator attribute returned calling log_layout currently used layout","code":""},{"path":"https://github.com/insightsengineering/teal.logger/reference/layout_teal_glue_generator.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate log layout function using common variables available via glue syntax including shiny session token — layout_teal_glue_generator","text":"function behaves way logger::layout_glue_generator() allows shiny session token (last 8 chars) included logging layout","code":""},{"path":"https://github.com/insightsengineering/teal.logger/reference/log_system_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Logs the basic information about the session. — log_system_info","title":"Logs the basic information about the session. — log_system_info","text":"Logs basic information session.","code":""},{"path":"https://github.com/insightsengineering/teal.logger/reference/log_system_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Logs the basic information about the session. — log_system_info","text":"","code":"log_system_info()"},{"path":"https://github.com/insightsengineering/teal.logger/reference/log_system_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Logs the basic information about the session. — log_system_info","text":"invisible(NULL)","code":""},{"path":[]},{"path":"https://github.com/insightsengineering/teal.logger/reference/register_logger.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Registers a logger instance in a given logging namespace. — register_logger","text":"","code":"register_logger(namespace = NA_character_, layout = NULL, level = NULL)"},{"path":"https://github.com/insightsengineering/teal.logger/reference/register_logger.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Registers a logger instance in a given logging namespace. — register_logger","text":"namespace (character(1) NA) name logging namespace layout (character(1)) log layout. Alongside standard logging variables provided logging package (e.g. pid) token variable can used write last 8 characters shiny session token log. level (character(1) call) log level. Can passed character one logger's objects. See logger::log_threshold() information.","code":""},{"path":"https://github.com/insightsengineering/teal.logger/reference/register_logger.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Registers a logger instance in a given logging namespace. — register_logger","text":"invisible(NULL)","code":""},{"path":"https://github.com/insightsengineering/teal.logger/reference/register_logger.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Registers a logger instance in a given logging namespace. — register_logger","text":"Creates new logging namespace specified namespace argument. layout level arguments set NULL (default), function gets values system variables R options. deciding use (either argument, R option system variable), function picks first non NULL value, checking order: Function argument. System variable. R option. layout level can set system environment variables, respectively: teal.log_layout TEAL.LOG_LAYOUT, teal.log_level TEAL.LOG_LEVEL. neither argument environment variable set function uses following R options: options(teal.log_layout), passed logger::layout_glue_generator(), options(teal.log_level), passed logger::log_threshold() logs output stdout default. Check logger information layouts use logger.","code":""},{"path":"https://github.com/insightsengineering/teal.logger/reference/register_logger.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Registers a logger instance in a given logging namespace. — register_logger","text":"thin wrapper around logger package.","code":""},{"path":[]},{"path":"https://github.com/insightsengineering/teal.logger/reference/register_logger.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Registers a logger instance in a given logging namespace. — register_logger","text":"","code":"options(teal.log_layout = \"{msg}\") options(teal.log_level = \"ERROR\") register_logger(namespace = \"new_namespace\") if (FALSE) { logger::log_info(\"Hello from new_namespace\", namespace = \"new_namespace\") }"},{"path":"https://github.com/insightsengineering/teal.logger/reference/suppress_logs.html","id":null,"dir":"Reference","previous_headings":"","what":"Suppress logger logs — suppress_logs","title":"Suppress logger logs — suppress_logs","text":"function suppresses logger running tests via testthat. suppress logs single test, add function call within testthat::test_that expression. suppress logs entire test file, call function start file.","code":""},{"path":"https://github.com/insightsengineering/teal.logger/reference/suppress_logs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Suppress logger logs — suppress_logs","text":"","code":"suppress_logs()"},{"path":"https://github.com/insightsengineering/teal.logger/reference/suppress_logs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Suppress logger logs — suppress_logs","text":"NULL invisible","code":""},{"path":"https://github.com/insightsengineering/teal.logger/reference/suppress_logs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Suppress logger logs — suppress_logs","text":"","code":"testthat::test_that(\"An example test\", {   suppress_logs()   testthat::expect_true(TRUE) }) #> Test passed 😸"},{"path":"https://github.com/insightsengineering/teal.logger/reference/teal.logger-package.html","id":null,"dir":"Reference","previous_headings":"","what":"teal.logger: Logging Setup For The `teal` Family Of Packages — teal.logger-package","title":"teal.logger: Logging Setup For The `teal` Family Of Packages — teal.logger-package","text":"Logging setup teal family packages.","code":""},{"path":"https://github.com/insightsengineering/teal.logger/reference/teal.logger-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"teal.logger: Logging Setup For The `teal` Family Of Packages — teal.logger-package","text":"Maintainer: NEST basel.nestcicd@roche.com Authors: Nikolas Burkoff nikolas.burkoff@roche.com Mahmoud Hallal mahmoud.hallal@roche.com Dawid Kaledkowski dawid.kaledkowski@roche.com Maciej Nasinski maciej.nasinski@contractors.roche.com Konrad Pagacz konrad.pagacz@contractors.roche.com Pawel Rucki pawel.rucki@contractors.roche.com Junlue Zhao zhaoj88@gene.com contributors: Tadeusz Lewandowski tadeusz.lewandowski@roche.com [contributor] Roche [copyright holder, funder]","code":""},{"path":[]},{"path":"https://github.com/insightsengineering/teal.logger/news/index.html","id":"miscellaneous-0-1-0-9001","dir":"Changelog","previous_headings":"","what":"Miscellaneous","title":"teal.logger 0.1.0.9001","text":"Added template pkgdown site.","code":""},{"path":"https://github.com/insightsengineering/teal.logger/news/index.html","id":"teallogger-010","dir":"Changelog","previous_headings":"","what":"teal.logger 0.1.0","title":"teal.logger 0.1.0","text":"Initial release teal.logger, package logging setup teal applications.","code":""},{"path":[]},{"path":"https://github.com/insightsengineering/teal.logger/news/index.html","id":"misc-0-1-0","dir":"Changelog","previous_headings":"Changes (from behavior when functionality was part of teal)","what":"Misc","title":"teal.logger 0.1.0","text":"functions suppress_logs log_system_info now part API package now exported.","code":""}]
