[{"path":[]},{"path":"https://github.com/insightsengineering/teal.logger/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://github.com/insightsengineering/teal.logger/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others‚Äô private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://github.com/insightsengineering/teal.logger/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://github.com/insightsengineering/teal.logger/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://github.com/insightsengineering/teal.logger/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement [INSERT CONTACT METHOD]. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://github.com/insightsengineering/teal.logger/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://github.com/insightsengineering/teal.logger/CODE_OF_CONDUCT.html","id":"1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://github.com/insightsengineering/teal.logger/CODE_OF_CONDUCT.html","id":"2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://github.com/insightsengineering/teal.logger/CODE_OF_CONDUCT.html","id":"3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://github.com/insightsengineering/teal.logger/CODE_OF_CONDUCT.html","id":"4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://github.com/insightsengineering/teal.logger/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired Mozilla‚Äôs code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://github.com/insightsengineering/teal.logger/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contribution Guidelines","title":"Contribution Guidelines","text":"First , thank taking time contribute! ‚úåÔ∏è üéâ love input regardless size, content scope - whether issue, feature request, bug-fix documentation enhancement. Thanks üôè rock ü§ò","code":""},{"path":"https://github.com/insightsengineering/teal.logger/CONTRIBUTING.html","id":"table-of-contents","dir":"","previous_headings":"","what":"Table of contents","title":"Contribution Guidelines","text":"üë∂ Getting started üìî Code Conduct üóÉ License üêõ report bug? üí° request change? üö© submit change? üëó Style guide üßê Recognition model ‚ùì questions","code":""},{"path":"https://github.com/insightsengineering/teal.logger/CONTRIBUTING.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting started","title":"Contribution Guidelines","text":"introduction, please read README file. can also find vignettes . Usually find ‚ÄúGetting started‚Äù article. Please also see package manual form pkgdown website.","code":""},{"path":"https://github.com/insightsengineering/teal.logger/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contribution Guidelines","text":"project governed Code Conduct. participating, expected follow rules outlined .","code":""},{"path":"https://github.com/insightsengineering/teal.logger/CONTRIBUTING.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Contribution Guidelines","text":"code changes license covers project.","code":""},{"path":"https://github.com/insightsengineering/teal.logger/CONTRIBUTING.html","id":"how-to-report-a-bug","dir":"","previous_headings":"","what":"How to report a bug?","title":"Contribution Guidelines","text":"use GitHub track issues, feature requests well bugs. opening new issue please double-check ‚Äôs already reported (don‚Äôt worry duplicate - manage). already - -vote ‚¨ÜÔ∏è. look faster! kindly ask write good issue minimal reproducible example demonstrates problem. also great know local environment (R session info) well. find template issues opening bug ticket. speed fixing process lot! üìà.","code":""},{"path":"https://github.com/insightsengineering/teal.logger/CONTRIBUTING.html","id":"how-to-request-the-change","dir":"","previous_headings":"","what":"How to request the change?","title":"Contribution Guidelines","text":"notice missing feature idea enhance existing functionalities - please let us know creating new issue. opening new issue please double-check ‚Äôs already reported (don‚Äôt worry occurs duplicate - manage). already - -vote ‚¨ÜÔ∏è. look faster! Please elaborate ‚Äú?‚Äù - ‚Äôs context, ‚Äôs benefit . find template opening feature request ticket. help us prioritize submit meaningful changes.","code":""},{"path":[]},{"path":"https://github.com/insightsengineering/teal.logger/CONTRIBUTING.html","id":"github-flow","dir":"","previous_headings":"How to submit a change?","what":"GitHub Flow","title":"Contribution Guidelines","text":"following GitHub Flow collaborate repository. order submit changes please following: Open branch Please see branch naming convention . don‚Äôt write access please fork first. Make changes. Make sure code passes checks well documented tested decrease existing test coverage üí™. Create PR(s) Please link issue make good change description. Include development assumptions necessary. Give details reviewer efficiently check changes. Address review comments Please apply changes necessary. disagree reviewer - please explain . approved - merge PR(s) delete branch","code":""},{"path":"https://github.com/insightsengineering/teal.logger/CONTRIBUTING.html","id":"branching-convention","dir":"","previous_headings":"How to submit a change?","what":"Branching convention","title":"Contribution Guidelines","text":"case working task inside one specific repository, please name branch <issue_id>_<short_description> lowercase. Multiple words description divided underscore (_). E.g. 15_fix_spelling_error case try solve spelling mistake mentioned issue number 15. case working task one repository affects multiple repositories, please always name branches: <issue_id>_<issue_repo>_<short description> lowercase. Multiple words description divided underscore (_). E.g. 15_abc_fix_spelling_error case try solve spelling mistake inside xyz closes issue 15 inside abc.","code":""},{"path":"https://github.com/insightsengineering/teal.logger/CONTRIBUTING.html","id":"monorepo-and-stageddependencies","dir":"","previous_headings":"How to submit a change?","what":"monorepo and staged.dependencies","title":"Contribution Guidelines","text":"Sometimes might need change upstream dependent package(s) able submit meaningful change. using staged.dependencies functionality simulate monorepo behavior. configuration already staged_dependencies.yaml file. just need name feature branches identically. exception branch naming convention described . Please read package manual details.","code":""},{"path":[]},{"path":"https://github.com/insightsengineering/teal.logger/CONTRIBUTING.html","id":"r--package-versions","dir":"","previous_headings":"How to submit a change? > Recommended development environment & tools","what":"R & package versions","title":"Contribution Guidelines","text":"continuously test packages newest R version well given package dependencies. recommend set-working environment way. can find details given GitHub Action execution log - step prints session info. find bugs older version dependencies - please create appropriate bug ticket.","code":""},{"path":"https://github.com/insightsengineering/teal.logger/CONTRIBUTING.html","id":"pre-commit","dir":"","previous_headings":"How to submit a change? > Recommended development environment & tools","what":"pre-commit","title":"Contribution Guidelines","text":"highly recommend pre-commit tool combined R hooks pre-commit execute checks prior committing pushing. configuration already repository (). Please, follow installation guide official pre-commit page GitHub readme page R hooks.","code":""},{"path":"https://github.com/insightsengineering/teal.logger/CONTRIBUTING.html","id":"style-guide","dir":"","previous_headings":"","what":"Style guide","title":"Contribution Guidelines","text":"repository follows standard tidyverse style guide ‚Äôs checked lintr. slight modifications default settings available .lintr file. Although allows flexibility - recommend sticking style existing code. Please note style also lintr check place validate code.","code":""},{"path":"https://github.com/insightsengineering/teal.logger/CONTRIBUTING.html","id":"recognition-model","dir":"","previous_headings":"","what":"Recognition model","title":"Contribution Guidelines","text":"contribution highly welcomed appreciated. contribution data already GitHub repository insights feature, introduced objective rules recognize significant contribution became package author: Minimum 5% lines code authored (determined git blame query) top 5 contributors terms number commits lines added lines removed. package maintainer also reserves rights manually adjust criteria recognize contributions.","code":""},{"path":"https://github.com/insightsengineering/teal.logger/CONTRIBUTING.html","id":"any-questions","dir":"","previous_headings":"","what":"Any questions","title":"Contribution Guidelines","text":"questions regarding contribution - please reach repository maintainer(s)!","code":""},{"path":[]},{"path":"https://github.com/insightsengineering/teal.logger/SECURITY.html","id":"reporting-security-issues","dir":"","previous_headings":"","what":"Reporting Security Issues","title":"Security Policy","text":"believe found security vulnerability repositories organization, please report us coordinated disclosure. Please report security vulnerabilities public GitHub issues, discussions, pull requests. Instead, please send email vulnerability.management[@]roche.com. Please include much information listed can help us better understand resolve issue: type issue (e.g., buffer overflow, SQL injection, cross-site scripting) Full paths source file(s) related manifestation issue location affected source code (tag/branch/commit direct URL) special configuration required reproduce issue Step--step instructions reproduce issue Proof--concept exploit code (possible) Impact issue, including attacker might exploit issue information help us triage report quickly.","code":""},{"path":"https://github.com/insightsengineering/teal.logger/SECURITY.html","id":"data-security-standards-dss","dir":"","previous_headings":"","what":"Data Security Standards (DSS)","title":"Security Policy","text":"Please make sure reporting issues form bug, feature, pull request, sensitive information PII, PHI, PCI completely removed text attachments, including pictures videos.","code":""},{"path":"https://github.com/insightsengineering/teal.logger/articles/teal-logger.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Getting started","text":"teal.logger package uses logger framework log events package. logger R package supporting logging namespaces, hierarchical logging, variety log destinations, vectorization, etc. information logger can found : GitHub CRAN","code":""},{"path":"https://github.com/insightsengineering/teal.logger/articles/teal-logger.html","id":"teal-loggers-default-logging-setup","dir":"Articles","previous_headings":"","what":"teal.logger‚Äôs default logging setup","title":"Getting started","text":"teal.logger uses function (register_logger) instantiate new logger namespace user‚Äôs choosing. teal.logger comes pair default layout logging level. packages teal framework use teal.logger log important events, e.g.¬†setup teal data, changes filter panel, records merging data slices inside modules, etc. teal.logger‚Äôs defaults: logging level: logger.INFO logging layout: [{level}] {format(time, \\\"%Y-%m-%d %H:%M:%OS4\\\")} pid:{pid} token:[{token}] {ans} {msg} logs emitted stdout Look logger documentation information different logging levels mean interpret layout.","code":""},{"path":"https://github.com/insightsengineering/teal.logger/articles/teal-logger.html","id":"customizing-the-log-level","dir":"Articles","previous_headings":"","what":"Customizing the log level","title":"Getting started","text":"using register_logger logging level new logger defaults logger::INFO. can customize behavior 4 different ways: Using logger interface. Customizing teal‚Äôs logging level: Using function argument register_logger. Customizing teal‚Äôs logging level: Setting environment variable. Customizing teal‚Äôs logging level: Setting option. Customizing teal‚Äôs logging level: Please, note packages teal framework register loggers loading library, means want change default logging level via option system environment variable, change variable first, load library. Example : Alternatively, can change options loading package call teal.logger::register_logger appropriate namespace name change default single package. E.g. change defaults teal.logger. Replace teal.logger name package want change. information, look logger documentation documentation teal.logger::register_logger.","code":"library(teal.logger) register_logger(\"my_namespace\") logger::log_threshold(logger::TRACE, namespace = \"my_namespace\") library(teal.logger) logger::log_threshold(logger::TRACE, namespace = \"teal\") library(teal.logger) register_logger(\"my_namespace\", level = logger::TRACE) library(teal.logger) register_logger(namespace = \"teal\", level = logger::TRACE) library(teal.logger) Sys.setenv(TEAL.LOG_LEVEL = \"TRACE\") register_logger(\"my_namespace\") Sys.setenv(TEAL.LOG_LEVEL = \"TRACE\") library(teal.logger) library(teal.logger) options(teal.log_level = logger::TRACE) register_logger(\"my_namespace\") options(teal.log_level = logger::TRACE) library(teal.logger) # library(teal) # Sys.setenv(TEAL.LOG_LEVEL = \"TRACE\") # won't change the default # Sys.setenv(TEAL.LOG_LEVEL = \"TRACE\") # library(teal) # will change the default because teal is attached after changing the variable library(teal.logger) Sys.setenv(TEAL.LOG_LEVEL = \"TRACE\") register_logger('teal.logger')"},{"path":"https://github.com/insightsengineering/teal.logger/articles/teal-logger.html","id":"customizing-the-log-layout","dir":"Articles","previous_headings":"","what":"Customizing the log layout","title":"Getting started","text":"using register_logger log layout new logger defaults [{level}] {format(time, \\\"%Y-%m-%d %H:%M:%OS4\\\")} pid:{pid} token:[{token}] {ans} {msg}. can customize behavior 4 different ways: Using logger interface. Customizing teal‚Äôs logging layout: Using function argument register_logger. Customizing teal‚Äôs logging layout: Setting environment variable. Customizing teal‚Äôs logging layout: Setting option. Customizing teal‚Äôs logging layout: Please, note teal registers logger loading library, means want change default logging layout via option system environment variable, change variable first, load library. Example : Alternatively, can change options loading package call teal.logger::register_logger appropriate namespace name change default single package. E.g. change defaults teal.logger. Replace teal.logger name package want change. information, look logger documentation documentation teal.logger::register_logger.","code":"library(teal.logger) register_logger(\"my_namespace\") logger::log_layout(\"{level} {msg}\", namespace = \"my_namespace\") library(teal.logger) logger::log_layout(\"{level} {msg}\", namespace = \"teal\") library(teal.logger) register_logger(\"my_namespace\", layout = \"{level} {msg}\") library(teal.logger) register_logger(namespace = \"teal\", layout = \"{level} {msg}\") library(teal.logger) Sys.setenv(TEAL.LOG_LAYOUT = \"{level} {msg}\") register_logger(\"my_namespace\") Sys.setenv(TEAL.LOG_LAYOUT = \"{level} {msg}\") library(teal.logger) library(teal.logger) options(teal.log_layout = \"{level} {msg}\") register_logger(\"my_namespace\") options(teal.log_layout = \"{level} {msg}\") library(teal.logger) library(teal.logger) Sys.setenv(TEAL.LOG_LAYOUT = \"{level} {msg}\") # won't change the default Sys.setenv(TEAL.LOG_LAYOUT = \"{level} {msg}\") library(teal.logger) # will change the default because teal is attached after changing the variable library(teal.logger) Sys.setenv(TEAL.LOG_LAYOUT = \"{level} {msg}\") register_logger('teal.logger')"},{"path":"https://github.com/insightsengineering/teal.logger/articles/teal-logger.html","id":"customizing-the-log-destination","dir":"Articles","previous_headings":"","what":"Customizing the log destination","title":"Getting started","text":"teal.logger, default emits logs stdout. want change behavior, use logger‚Äôs API. Example redirecting teal‚Äôs logs stderr using logger‚Äôs API:","code":"library(teal.logger) logger::log_appender(logger::appender_stderr, namespace = \"teal\")"},{"path":"https://github.com/insightsengineering/teal.logger/articles/teal-logger.html","id":"logging-in-other-teal-x-packages","dir":"Articles","previous_headings":"","what":"Logging in other teal.X packages","title":"Getting started","text":"teal.X packages, like teal.data, use teal.logger::register_logger register loggers namespace. package registers logger namespace equal package name. E.g. teal.data registers logger teal.data namespace. package instantiates logger package loading using default logging settings subject modifications described sections .","code":""},{"path":"https://github.com/insightsengineering/teal.logger/articles/teal-logger.html","id":"example-of-usage","dir":"Articles","previous_headings":"","what":"Example of usage","title":"Getting started","text":"minimal working example logging using teal‚Äôs logging setup. default TEAL.LOG.LEVEL = \"INFO\" means logs level level = 400 won‚Äôt passed stdout.","code":"library(teal.logger) register_logger(namespace = \"my_module\")  logger::log_error(\"This is an ERROR level log from my module\", namespace = \"my_module\") # 200 logger::log_warn(\"This is a WARN level log from my module\", namespace = \"my_module\") # 300 logger::log_success(\"This is a SUCCESS level log from my module\", namespace = \"my_module\") # 350 logger::log_info(\"This is an INFO level log from my module\", namespace = \"my_module\") # 400 logger::log_info(\"This is a DEBUG level log from my module\", namespace = \"my_module\") # 500 logger::log_trace(\"This is a TRACE level log from my module\", namespace = \"my_module\") # 600"},{"path":"https://github.com/insightsengineering/teal.logger/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Dawid Kaledkowski. Author, maintainer. Konrad Pagacz. Author. F. Hoffmann-La Roche AG. Copyright holder, funder.","code":""},{"path":"https://github.com/insightsengineering/teal.logger/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Kaledkowski D, Pagacz K (2022). teal.logger: Logging Setup 'teal' Family Packages. R package version 0.1.0.9003.","code":"@Manual{,   title = {teal.logger: Logging Setup For The `teal` Family Of Packages},   author = {Dawid Kaledkowski and Konrad Pagacz},   year = {2022},   note = {R package version 0.1.0.9003}, }"},{"path":"https://github.com/insightsengineering/teal.logger/index.html","id":"teallogger","dir":"","previous_headings":"","what":"Logging Setup For The `teal` Family Of Packages","title":"Logging Setup For The `teal` Family Of Packages","text":"teal.logger R package providing unified setup generating logs using logger package.","code":""},{"path":"https://github.com/insightsengineering/teal.logger/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Logging Setup For The `teal` Family Of Packages","text":"recommended create use Github PAT install latest version package. PAT, run following: See package vignettes browseVignettes(package = \"teal.logger\") usage package.","code":"Sys.setenv(GITHUB_PAT = \"your_access_token_here\") if (!require(\"devtools\")) install.packages(\"devtools\") devtools::install_github(\"insightsengineering/teal.logger@*release\")"},{"path":"https://github.com/insightsengineering/teal.logger/pull_request_template.html","id":null,"dir":"","previous_headings":"","what":"Pull Request","title":"Pull Request","text":"Fixes #nnn","code":""},{"path":"https://github.com/insightsengineering/teal.logger/reference/layout_teal_glue_generator.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate log layout function using common variables available via glue syntax including shiny session token ‚Äî layout_teal_glue_generator","title":"Generate log layout function using common variables available via glue syntax including shiny session token ‚Äî layout_teal_glue_generator","text":"Generate log layout function using common variables available via glue syntax including shiny session token","code":""},{"path":"https://github.com/insightsengineering/teal.logger/reference/layout_teal_glue_generator.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate log layout function using common variables available via glue syntax including shiny session token ‚Äî layout_teal_glue_generator","text":"","code":"layout_teal_glue_generator(layout)"},{"path":"https://github.com/insightsengineering/teal.logger/reference/layout_teal_glue_generator.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate log layout function using common variables available via glue syntax including shiny session token ‚Äî layout_teal_glue_generator","text":"layout (character(1)) log layout. Alongside standard logging variables provided logging package (e.g. pid) token variable can used write last 8 characters shiny session token log.","code":""},{"path":"https://github.com/insightsengineering/teal.logger/reference/layout_teal_glue_generator.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate log layout function using common variables available via glue syntax including shiny session token ‚Äî layout_teal_glue_generator","text":"function taking level msg arguments - keeping original call creating generator generator attribute returned calling log_layout currently used layout","code":""},{"path":"https://github.com/insightsengineering/teal.logger/reference/layout_teal_glue_generator.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate log layout function using common variables available via glue syntax including shiny session token ‚Äî layout_teal_glue_generator","text":"function behaves way logger::layout_glue_generator() allows shiny session token (last 8 chars) included logging layout","code":""},{"path":"https://github.com/insightsengineering/teal.logger/reference/log_system_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Logs the basic information about the session. ‚Äî log_system_info","title":"Logs the basic information about the session. ‚Äî log_system_info","text":"Logs basic information session.","code":""},{"path":"https://github.com/insightsengineering/teal.logger/reference/log_system_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Logs the basic information about the session. ‚Äî log_system_info","text":"","code":"log_system_info()"},{"path":"https://github.com/insightsengineering/teal.logger/reference/log_system_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Logs the basic information about the session. ‚Äî log_system_info","text":"invisible(NULL)","code":""},{"path":[]},{"path":"https://github.com/insightsengineering/teal.logger/reference/register_logger.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Registers a logger instance in a given logging namespace. ‚Äî register_logger","text":"","code":"register_logger(namespace = NA_character_, layout = NULL, level = NULL)"},{"path":"https://github.com/insightsengineering/teal.logger/reference/register_logger.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Registers a logger instance in a given logging namespace. ‚Äî register_logger","text":"namespace (character(1) NA) name logging namespace layout (character(1)) log layout. Alongside standard logging variables provided logging package (e.g. pid) token variable can used write last 8 characters shiny session token log. level (character(1) call) log level. Can passed character one logger's objects. See logger::log_threshold() information.","code":""},{"path":"https://github.com/insightsengineering/teal.logger/reference/register_logger.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Registers a logger instance in a given logging namespace. ‚Äî register_logger","text":"invisible(NULL)","code":""},{"path":"https://github.com/insightsengineering/teal.logger/reference/register_logger.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Registers a logger instance in a given logging namespace. ‚Äî register_logger","text":"Creates new logging namespace specified namespace argument. layout level arguments set NULL (default), function gets values system variables R options. deciding use (either argument, R option system variable), function picks first non NULL value, checking order: Function argument. System variable. R option. layout level can set system environment variables, respectively: teal.log_layout TEAL.LOG_LAYOUT, teal.log_level TEAL.LOG_LEVEL. neither argument environment variable set function uses following R options: options(teal.log_layout), passed logger::layout_glue_generator(), options(teal.log_level), passed logger::log_threshold() logs output stdout default. Check logger information layouts use logger.","code":""},{"path":"https://github.com/insightsengineering/teal.logger/reference/register_logger.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Registers a logger instance in a given logging namespace. ‚Äî register_logger","text":"thin wrapper around logger package.","code":""},{"path":[]},{"path":"https://github.com/insightsengineering/teal.logger/reference/register_logger.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Registers a logger instance in a given logging namespace. ‚Äî register_logger","text":"","code":"options(teal.log_layout = \"{msg}\") options(teal.log_level = \"ERROR\") register_logger(namespace = \"new_namespace\") if (FALSE) { logger::log_info(\"Hello from new_namespace\", namespace = \"new_namespace\") }"},{"path":"https://github.com/insightsengineering/teal.logger/reference/suppress_logs.html","id":null,"dir":"Reference","previous_headings":"","what":"Suppress logger logs ‚Äî suppress_logs","title":"Suppress logger logs ‚Äî suppress_logs","text":"function suppresses logger running tests via testthat. suppress logs single test, add function call within testthat::test_that expression. suppress logs entire test file, call function start file.","code":""},{"path":"https://github.com/insightsengineering/teal.logger/reference/suppress_logs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Suppress logger logs ‚Äî suppress_logs","text":"","code":"suppress_logs()"},{"path":"https://github.com/insightsengineering/teal.logger/reference/suppress_logs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Suppress logger logs ‚Äî suppress_logs","text":"NULL invisible","code":""},{"path":"https://github.com/insightsengineering/teal.logger/reference/suppress_logs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Suppress logger logs ‚Äî suppress_logs","text":"","code":"testthat::test_that(\"An example test\", {   suppress_logs()   testthat::expect_true(TRUE) }) #> Test passed ü•á"},{"path":"https://github.com/insightsengineering/teal.logger/reference/teal.logger-package.html","id":null,"dir":"Reference","previous_headings":"","what":"teal.logger: Logging Setup For The `teal` Family Of Packages ‚Äî teal.logger-package","title":"teal.logger: Logging Setup For The `teal` Family Of Packages ‚Äî teal.logger-package","text":"Logging setup teal family packages.","code":""},{"path":"https://github.com/insightsengineering/teal.logger/reference/teal.logger-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"teal.logger: Logging Setup For The `teal` Family Of Packages ‚Äî teal.logger-package","text":"Maintainer: Dawid Kaledkowski dawid.kaledkowski@roche.com Authors: Konrad Pagacz konrad.pagacz@contractors.roche.com contributors: F. Hoffmann-La Roche AG [copyright holder, funder]","code":""},{"path":[]},{"path":"https://github.com/insightsengineering/teal.logger/news/index.html","id":"miscellaneous-0-1-0-9003","dir":"Changelog","previous_headings":"","what":"Miscellaneous","title":"teal.logger 0.1.0.9003","text":"Added template pkgdown site.","code":""},{"path":"https://github.com/insightsengineering/teal.logger/news/index.html","id":"teallogger-010","dir":"Changelog","previous_headings":"","what":"teal.logger 0.1.0","title":"teal.logger 0.1.0","text":"Initial release teal.logger, package logging setup teal applications.","code":""},{"path":[]},{"path":"https://github.com/insightsengineering/teal.logger/news/index.html","id":"misc-0-1-0","dir":"Changelog","previous_headings":"Changes (from behavior when functionality was part of teal)","what":"Misc","title":"teal.logger 0.1.0","text":"functions suppress_logs log_system_info now part API package now exported.","code":""}]
